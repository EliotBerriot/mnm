version: '2'

volumes:
  postgres_data_dev: {}
  postgres_backup_dev: {}

services:
  redis:
    image: redis

  postgres:
    build: ./compose/postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - postgres_backup_dev:/backups
    environment:
      - POSTGRES_USER=mnm

  influxdb:
    image: influxdb:1.2
    ports:
      - "8083:8083"
      - "8086:8086"
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./compose/grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - "GF_SERVER_ROOT_URL=https://localhost:3000"
      - "GF_SECURITY_ADMIN_PASSWORD=secret"
      - "GF_INSTALL_PLUGINS=grafana-piechart-panel,vonage-status-panel,grafana-worldmap-panel"

  django:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    command: /start-dev.sh
    env_file: .env
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=mnm
      - USE_DOCKER=yes
      - INFLUXDB_URL=influxdb://root:root@influxdb:8086/test
    volumes:
      - .:/app
    ports:
      - "8000:8000"

  celeryworker:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    volumes:
        - .:/app
    depends_on:
     - postgres
     - redis
    command: celery -A mnm.taskapp worker -l INFO
    env_file: .env
    environment:
      - POSTGRES_USER=mnm
      - USE_DOCKER=yes
      - INFLUXDB_URL=influxdb://root:root@influxdb:8086/test


  celerybeat:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    env_file: .env
    volumes:
        - .:/app
    depends_on:
      - postgres
      - redis
    command: celery -A mnm.taskapp beat -l INFO
    environment:
      - POSTGRES_USER=mnm
      - USE_DOCKER=yes
      - INFLUXDB_URL=influxdb://root:root@influxdb:8086/test
