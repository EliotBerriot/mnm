version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}

services:
  redis:
    restart: unless-stopped
    image: redis

  postgres:
    restart: unless-stopped
    build: ./compose/postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/postgres/database:/var/lib/postgresql/data
      - postgres_backup:/backups
    env_file: .env

  influxdb:
    restart: unless-stopped
    image: influxdb:1.2
    volumes:
        - ./data/influxdb:/var/lib/influxdb

  grafana:
    restart: unless-stopped
    image: grafana/grafana
    env_file: .env
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana/lib:/var/lib/grafana
      - ./compose/grafana/grafana.ini:/etc/grafana/grafana.ini

  celeryworker: &base_app
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    user: django
    env_file: .env
    depends_on:
     - postgres
     - redis
     - influxdb
    command: celery -A mnm.taskapp worker -l INFO --autoscale=12,3

  django:
    <<: *base_app
    command: /gunicorn.sh

  celerybeat:
    <<: *base_app
    command: celery -A mnm.taskapp beat -l INFO

  recorder:
    <<: *base_app
    command: python manage.py record_public_timeline

  bot:
    <<: *base_app
    command: python manage.py start_bot

  nginx:
    restart: unless-stopped
    build: ./compose/nginx
    depends_on:
      - django

    ports:
      - "9063:80"

  redis:
    restart: unless-stopped
    image: redis:latest
